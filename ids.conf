input {

#Production Logs#############################
  file {
    type => "BRO_http_eth1log"
    path => "/nsm/bro/logs/current/http_eth1.log"
  }
  file {
    type => "BRO_known_certslog"
    path => "/nsm/bro/logs/current/known_certs.log"
  }
  file {
    type => "BRO_noticelog"
    path => "/nsm/bro/logs/current/notice.log"
  }
  file {
    type => "BRO_known_hostslog"
    path => "/nsm/bro/logs/current/known_hosts.log"
  }
  file {
    type => "BRO_known_serviceslog"
    path => "/nsm/bro/logs/current/known_services.log"
  }
  file {
    type => "BRO_sshlog"
    path => "/nsm/bro/logs/current/ssh.log"
  }
  file {
    type => "BRO_dpdlog"
    path => "/nsm/bro/logs/current/dpd.log"
  }
  file {
    type => "BRO_connlog"
    path => "/nsm/bro/logs/current/conn.log"
  }
  file {
    type => "BRO_weirdlog"
    path => "/nsm/bro/logs/current/weird.log"
  }
  file {
    type => "BRO_app_statslog"
    path => "/nsm/bro/logs/current/appstats.log"
  }
  file {
    type => "BRO_dhcplog"
    path => "/nsm/bro/logs/current/dhcp.log"
  }
  file {
    type => "BRO_fileslog"
    path => "/nsm/bro/logs/current/files.log"
  }
  file {
    type => "BRO_ssllog"
    path => "/nsm/bro/logs/current/ssl.log"
  }
  file {
    type => "BRO_noticelog"
    path => "/nsm/bro/logs/current/notice.log"
  }
  file {
    type => "BRO_softwarelog"
    path => "/nsm/bro/logs/current/software.log"
  }
  file {
    type => "BRO_dnslog"
    path => "/nsm/bro/logs/current/dns.log"
  }
  file {
    type => "syslog"
    path => "/nsm/bro/logs/current/syslog.log"
  }
}

filter {
  if "bro" in [path] {
  if [message] =~ /^#/ {
    drop {  }
  } else {

# BRO_app_statslog ######################
  if [type] == "BRO_app_statslog" {
    grok {
match => [ "message", "(?<ts>(.*?))\t(?<ts_delta>(.*?))\t(?<app>(.*?))\t(?<uniq_hosts>(.*?))\t(?<hits>(.*?))\t(?<bytes>(.*))" ]
    }
  }

# BRO_connlog ######################
  if [type] == "BRO_connlog" {
    grok {
match => [ "message", "(?<ts>(.*?))\t(?<uid>(.*?))\t(?<src_ip>(.*?))\t(?<src_port>(.*?))\t(?<dst_ip>(.*?))\t(?<dst_port>(.*?))\t(?<proto>(.*?))\t(?<service>(.*?))\t(?<duration>(.*?))\t(?<orig_bytes>(.*?))\t(?<resp_bytes>(.*?))\t(?<conn_state>(.*?))\t(?<local_orig>(.*?))\t(?<missed_bytes>(.*?))\t(?<history>(.*?))\t(?<orig_pkts>(.*?))\t(?<orig_ip_bytes>(.*?))\t(?<resp_pkts>(.*?))\t(?<resp_ip_bytes>(.*?))\t(?<tunnel_parents>(.*?))\t(?<orig_cc>(.*?))\t(?<resp_cc>(.*?))\t(?<sensorname>(.*))" ]
    }
  }

# BRO_noticelog ######################
  if [type] == "BRO_noticelog" {
    grok { 
      match => [ "message", "(?<ts>(.*?))\t(?<uid>(.*?))\t(?<src_ip>(.*?))\t(?<src_port>(.*?))\t(?<dst_ip>(.*?))\t(?<dst_port>(.*?))\t(?<fuid>(.*?))\t(?<file_mime_type>(.*?))\t(?<file_desc>(.*?))\t(?<proto>(.*?))\t(?<note>(.*?))\t(?<msg>(.*?))\t(?<sub>(.*?))\t(?<src>(.*?))\t(?<dst>(.*?))\t(?<p>(.*?))\t(?<n>(.*?))\t(?<peer_descr>(.*?))\t(?<actions>(.*?))\t(?<suppress_for>(.*?))\t(?<dropped>(.*?))\t(?<remote_location.country_code>(.*?))\t(?<remote_location.region>(.*?))\t(?<remote_location.city>(.*?))\t(?<remote_location.latitude>(.*?))\t(?<remote_location.longitude>(.*))" ]
    }
  }

# BRO_dhcplog ######################
  if [type] == "BRO_dhcplog" {
    grok { 
      match => [ "message", "(?<ts>(.*?))\t(?<uid>(.*?))\t(?<src_ip>(.*?))\t(?<src_port>(.*?))\t(?<dst_ip>(.*?))\t(?<dst_port>(.*?))\t(?<mac>(.*?))\t(?<assigned_ip>(.*?))\t(?<lease_time>(.*?))\t(?<trans_id>(.*))" ]
    }
  }

# BRO_dnslog ######################
  if [type] == "BRO_dnslog" {
    grok {
match => [ "message", "(?<ts>(.*?))\t(?<uid>(.*?))\t(?<src_ip>(.*?))\t(?<src_port>(.*?))\t(?<dst_ip>(.*?))\t(?<dst_port>(.*?))\t(?<proto>(.*?))\t(?<trans_id>(.*?))\t(?<query>(.*?))\t(?<qclass>(.*?))\t(?<qclass_name>(.*?))\t(?<qtype>(.*?))\t(?<qtype_name>(.*?))\t(?<rcode>(.*?))\t(?<rcode_name>(.*?))\t(?<AA>(.*?))\t(?<TC>(.*?))\t(?<RD>(.*?))\t(?<RA>(.*?))\t(?<Z>(.*?))\t(?<answers>(.*?))\t(?<TTLs>(.*?))\t(?<rejected>(.*))" ]
    }
  }

# BRO_softwarelog ######################
  if [type] == "BRO_softwarelog" {
    grok { 
      match => [ "message", "(?<ts>(.*?))\t(?<host>(.*?))\t(?<host_p>(.*?))\t(?<software_type>(.*?))\t(?<name>(.*?))\t(?<version.major>(.*?))\t(?<version.minor>(.*?))\t(?<version.minor2>(.*?))\t(?<version.minor3>(.*?))\t(?<version.addl>(.*?))\t(?<unparsed_version>(.*))" ]
    }
  }

# BRO_dpdlog ######################
  if [type] == "BRO_dpdlog" {
    grok {
match => [ "message", "(?<ts>(.*?))\t(?<uid>(.*?))\t(?<src_ip>(.*?))\t(?<src_port>(.*?))\t(?<dst_ip>(.*?))\t(?<dst_port>(.*?))\t(?<proto>(.*?))\t(?<analyzer>(.*?))\t(?<failure_reason>(.*))" ]
    }
  }

# BRO_fileslog ######################
  if [type] == "BRO_fileslog" {
    grok {
match => [ "message", "(?<ts>(.*?))\t(?<fuid>(.*?))\t(?<tx_hosts>(.*?))\t(?<rx_hosts>(.*?))\t(?<conn_uids>(.*?))\t(?<source>(.*?))\t(?<depth>(.*?))\t(?<analyzers>(.*?))\t(?<mime_type>(.*?))\t(?<filename>(.*?))\t(?<duration>(.*?))\t(?<local_orig>(.*?))\t(?<is_orig>(.*?))\t(?<seen_bytes>(.*?))\t(?<total_bytes>(.*?))\t(?<missing_bytes>(.*?))\t(?<overflow_bytes>(.*?))\t(?<timedout>(.*?))\t(?<parent_fuid>(.*?))\t(?<md5>(.*?))\t(?<sha1>(.*?))\t(?<sha256>(.*?))\t(?<extracted>(.*))" ]
    }
  }

# BRO_http_eth1log ######################
  if [type] == "BRO_http_eth1log" {
    grok {
match => [ "message", "(?<ts>(.*?))\t(?<uid>(.*?))\t(?<src_ip>(.*?))\t(?<src_port>(.*?))\t(?<dst_ip>(.*?))\t(?<dst_port>(.*?))\t(?<trans_depth>(.*?))\t(?<method>(.*?))\t(?<host>(.*?))\t(?<uri>(.*?))\t(?<referrer>(.*?))\t(?<user_agent>(.*?))\t(?<request_body_len>(.*?))\t(?<response_body_len>(.*?))\t(?<status_code>(.*?))\t(?<status_msg>(.*?))\t(?<info_code>(.*?))\t(?<info_msg>(.*?))\t(?<filename>(.*?))\t(?<tags>(.*?))\t(?<username>(.*?))\t(?<password>(.*?))\t(?<proxied>(.*?))\t(?<orig_fuids>(.*?))\t(?<orig_mime_types>(.*?))\t(?<resp_fuids>(.*?))\t(?<resp_mime_types>(.*))" ]
    }
  }

# BRO_known_certslog ######################
  if [type] == "BRO_known_certslog" {
    grok {
match => [ "message", "(?<ts>(.*?))\t(?<host>(.*?))\t(?<port_num>(.*?))\t(?<subject>(.*?))\t(?<issuer_subject>(.*?))\t(?<serial>(.*))" ]
    }
  }

# BRO_known_hostslog ######################
  if [type] == "BRO_known_hostslog" {
    grok {
match => [ "message", "(?<ts>(.*?))\t(?<host>(.*))" ]
    }
  }

# BRO_known_serviceslog ######################
  if [type] == "BRO_known_serviceslog" {
    grok {
match => [ "message", "(?<ts>(.*?))\t(?<host>(.*?))\t(?<port_num>(.*?))\t(?<port_proto>(.*?))\t(?<service>(.*))" ]
    }
  }

# BRO_sshlog ######################
  if [type] == "BRO_sshlog" {
    grok {
match => [ "message", "(?<ts>(.*?))\t(?<uid>(.*?))\t(?<src_ip>(.*?))\t(?<src_port>(.*?))\t(?<dst_ip>(.*?))\t(?<dst_port>(.*?))\t(?<status>(.*?))\t(?<direction>(.*?))\t(?<client>(.*?))\t(?<server>(.*?))\t(?<remote_location.country_code>(.*?))\t(?<remote_location.region>(.*?))\t(?<remote_location.city>(.*?))\t(?<remote_location.latitude>(.*?))\t(?<remote_location.longitude>(.*))" ]
    }
  }

# BRO_ssllog ######################
  if [type] == "BRO_ssllog" {
    grok {
match => [ "message", "(?<ts>(.*?))\t(?<uid>(.*?))\t(?<src_ip>(.*?))\t(?<src_port>(.*?))\t(?<dst_ip>(.*?))\t(?<dst_port>(.*?))\t(?<version>(.*?))\t(?<cipher>(.*?))\t(?<server_name>(.*?))\t(?<session_id>(.*?))\t(?<subject>(.*?))\t(?<issuer_subject>(.*?))\t(?<not_valid_before>(.*?))\t(?<not_valid_after>(.*?))\t(?<last_alert>(.*?))\t(?<client_subject>(.*?))\t(?<client_issuer_subject>(.*?))\t(?<cert_hash>(.*?))\t(?<validation_status>(.*))" ]
    }
  }

# BRO_syslog ######################
  if [type] == "syslog" {
    grok {
match => [ "message", "(?<ts>(.*?))\t(?<uid>(.*?))\t(?<firewall_ip>(.*?))\t(?<firewall_port>(.*?))\t(?<sensor_ip>(.*?))\t(?<sensor_port>(.*?))\t(?<sensor_proto>(.*?))\t(?<facility>(.*?))\t(?<severity>(.*?))\tCP_FireWall: %{WORD}%{SPACE}%{TIME}%{SPACE}%{WORD:packetstate}%{SPACE}%{IP:hostip}%{SPACE}%{GREEDYDATA:msg}" ]
    }
  }


# BRO_weirdlog ######################
  if [type] == "BRO_weirdlog" {
    grok {
match => [ "message", "(?<ts>(.*?))\t(?<uid>(.*?))\t(?<src_ip>(.*?))\t(?<src_port>(.*?))\t(?<dst_ip>(.*?))\t(?<dst_port>(.*?))\t(?<name>(.*?))\t(?<addl>(.*?))\t(?<notice>(.*?))\t(?<peer>(.*))" ]
    }
  }
}


if "BRO" in [type] {

if [orig_bytes] == "-" {
mutate {
remove_field => [ "orig_bytes" ]
}
}
if [orig_pkts] == "D" {
mutate {
remove_field => [ "orig_pkts" ]
}
}
if [orig_pkts] == "^f" {
mutate {
remove_field => [ "orig_pkts" ]
}
}
if [missed_bytes] == "F" {
mutate {
remove_field => [ "missed_bytes" ]
}
}
if [resp_bytes] == "-" {
mutate {
remove_field => [ "resp_bytes" ]
}
}
if [missed_bytes] == "T" {
mutate {
remove_field => [ "missed_bytes" ]
}
}
if [orig_pkts] == "-" {
mutate {
remove_field => [ "orig_pkts" ]
}
}
}

  if "syslog" in [type] {
mutate {
  update => { "type" => "firewall" }
  add_field => { "site" => "xxxxxxx" }
 }
}

 if "firewall" in [type] {
grok {
break_on_match => true
match => { "msg" => "user:%{GREEDYDATA:user};src:%{IP:src_ip};endpoint_ip:%{IP:endpoint_ip};auth_status:%{GREEDYDATA:auth_status};identity_src:%{GREEDYDATA:identity_source};snid:%{WORD:snid};src_user_name:%{GREEDYDATA:src_usr};src_user_group:%{GREEDYDATA:src_usr_group};auth_method:%{GREEDYDATA:auth_method};identity_type:%{DATA:identity_type};roles:%{GREEDYDATA:roles};product:%{GREEDYDATA:product};product_family:%{GREEDYDATA:product_family}"}
match => { "msg" => "user:%{GREEDYDATA:user};src:%{IP:src_ip};duration:%{TIME:duration};description:%{GREEDYDATA:description};src_user_name:%{GREEDYDATA:src_user_name};identity_src:%{GREEDYDATA:identity_src};snid:%{WORD:snid};termination_reason:%{GREEDYDATA:termination_reason};identity_type:%{DATA:identity_type};product:%{GREEDYDATA:product};product_family:%{GREEDYDATA:product_family}"}
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{WORD:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};xlatesrc:%{IP:xlatesrc};NAT_rulenum:%{INT:nat_rule_num};NAT_addtnl_rulenum:%{INT:addtnl_rule_num};scheme::%{GREEDYDATA:scheme};methods::%{GREEDYDATA:methods};peer gateway:%{GREEDYDATA:peer_gateway};community:%{GREEDYDATA:community};user:%{GREEDYDATA:user};session_uid:\{%{GREEDYDATA:session_uid}\};fw_subproduct:%{GREEDYDATA:subproduct};vpn_feature_name:%{GREEDYDATA:vpn_feature_name};src_user_name%{GREEDYDATA:src_user_name};snid:%{WORD:snid};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}"}
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};ICMP:%{DATA:icmp_type};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};ICMP Type:%{WORD:icmp_type};ICMP Code:%{WORD:icmp_code};xlatesrc:%{IP:xlatesrc};NAT_rulenum:%{INT:nat_rule_num};NAT_addtnl_rulenum:%{INT:addtnl_rule_num};scheme::%{GREEDYDATA:scheme};methods::%{GREEDYDATA:methods};peer gateway:%{GREEDYDATA:peer_gateway};community:%{GREEDYDATA:community};user:%{GREEDYDATA:user};session_uid:\{%{GREEDYDATA:session_uid}\};fw_subproduct:%{GREEDYDATA:subproduct};vpn_feature_name:%{WORD:vpn_feature_name};src_user_name:%{GREEDYDATA:src_usr};product:%{GREEDYDATA:product};product_family:%{GREEDYDATA:product_family}"}
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{WORD:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};xlatesrc:%{IP:xlatesrc};NAT_rulenum:%{INT:nat_rule_num};NAT_addtnl_rulenum:%{INT:addtnl_rule_num};scheme::%{WORD:scheme};methods::%{GREEDYDATA:methods};peer gateway:%{IP:peer_gateway};community:%{WORD:community};user:%{GREEDYDATA:user};session_uid:\{%{GREEDYDATA:session_uid}\};fw_subproduct:%{GREEDYDATA:subproduct};vpn_feature_name:%{WORD:vpn_feature_name};src_user_name:%{GREEDYDATA:src_usr};snid:%{WORD:snid};product:%{GREEDYDATA:product};service:%{DATA:service};s_port:%{DATA:src_port};xlatesport:%{DATA:xlatesport};DCE-RPC Interface UUID:%{GREEDYDATA:interface_uid};product_family:%{GREEDYDATA:product_family}"}
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};NAT_rulenum:%{INT:nat_rule_num};NAT_addtnl_rulenum:%{INT:addtnl_rule_num};rule:%{WORD:rule1};message_info:%{GREEDYDATA:message_info};scheme::%{WORD:scheme};methods::%{GREEDYDATA:methods};peer gateway:%{IP:peer_gateway};community:%{WORD:community};user:%{GREEDYDATA:user};session_uid:\{%{GREEDYDATA:session_uid}\};fw_subproduct:%{GREEDYDATA:subproduct};vpn_feature_name:%{WORD:vpn_feature_name};src_user_name:%{GREEDYDATA:src_usr};snid:%{WORD:snid};product:%{GREEDYDATA:product};service:%{DATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}"}
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{WORD:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};xlatesrc:%{IP:xlatesrc};NAT_rulenum:%{INT:nat_rule_num};NAT_addtnl_rulenum:%{INT:addtnl_rule_num};scheme::%{WORD:scheme};methods::%{GREEDYDATA:methods};peer gateway:%{IP:peer_gateway};community:%{WORD:community};user:%{GREEDYDATA:user};session_uid:\{%{GREEDYDATA:session_uid}\};fw_subproduct:%{GREEDYDATA:subproduct};vpn_feature_name:%{WORD:vpn_feature_name};src_user_name:%{GREEDYDATA:src_usr};snid:%{WORD:snid};product:%{GREEDYDATA:product};service:%{DATA:service};s_port:%{DATA:src_port};xlatesport:%{DATA:xlatesport};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "reason:%{GREEDYDATA:reason};resource:%{GREEDYDATA:resource};web_client_type:%{GREEDYDATA:web_client_type};Attack Info:%{GREEDYDATA:attack_info};attack:%{GREEDYDATA:attack};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};proxy_src_ip:192.168.0.140;user:%{GREEDYDATA:user};src_user_name:%{GREEDYDATA:src_usr};src_machine_name:%{GREEDYDATA:src_machine_name};snid:%{WORD:snid};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{WORD:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};xlatesrc:%{IP:xlatesrc};NAT_rulenum:%{INT:nat_rule_num};NAT_addtnl_rulenum:%{INT:addtnl_rule_num};scheme::%{WORD:scheme};methods::%{GREEDYDATA:methods};peer gateway:%{IP:peer_gateway};community:%{WORD:community};user:%{GREEDYDATA:user};session_uid:\{%{GREEDYDATA:session_uid}\};fw_subproduct:%{GREEDYDATA:subproduct};vpn_feature_name:%{WORD:vpn_feature_name};src_user_name:%{GREEDYDATA:src_usr};snid:%{WORD:snid};dst_machine_name:%{GREEDYDATA:dst_machine_name};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}"}
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};NAT_rulenum:%{INT:nat_rule_num};NAT_addtnl_rulenum:%{INT:addtnl_rule_num};rule:%{WORD:rule1};message_info:%{GREEDYDATA:message_info};scheme::%{WORD:scheme};methods::%{GREEDYDATA:methods};peer gateway:%{IP:peer_gateway};community:%{WORD:community};user:%{GREEDYDATA:user};session_uid:\{%{GREEDYDATA:session_uid}\};fw_subproduct:%{GREEDYDATA:subproduct};vpn_feature_name:%{WORD:vpn_feature_name};src_user_name:%{GREEDYDATA:src_usr};snid:%{WORD:snid};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}"}
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{WORD:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};xlatedst:%{IP:xlatedst};NAT_rulenum:%{WORD:NAT_rulenum};NAT_addtnl_rulenum:%{WORD:NAT_addtnl_rulenum};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}"}
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{WORD:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};user:%{GREEDYDATA:user};src_user_name:%{GREEDYDATA:src_usr};src_machine_name:%{GREEDYDATA:src_machine_name};snid:%{WORD:snid};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}"}
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{WORD:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};xlatesrc:%{IP:xlatesrc};NAT_rulenum:%{INT:nat_rule_num};NAT_addtnl_rulenum:%{INT:addtnl_rule_num};scheme::%{WORD:scheme};methods::%{GREEDYDATA:methods};peer gateway:%{IP:peer_gateway};community:%{WORD:community};user:%{GREEDYDATA:user};session_uid:\{%{GREEDYDATA:session_uid}\};fw_subproduct:%{GREEDYDATA:subproduct};vpn_feature_name:%{WORD:vpn_feature_name};src_user_name:%{GREEDYDATA:src_usr};snid:%{WORD:snid};dst_machine_name:%{GREEDYDATA:dst_machine_name};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};xlatesport:%{DATA:xlatesport};product_family:%{GREEDYDATA:product_family}"}
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{WORD:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};xlatesrc:%{IP:xlatesrc};NAT_rulenum:%{INT:nat_rule_num};NAT_addtnl_rulenum:%{INT:addtnl_rule_num};user:%{GREEDYDATA:user};src_machine_name:%{GREEDYDATA:src_machine_name};snid:%{WORD:snid};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};xlatesport:%{DATA:xlatesport};product_family:%{GREEDYDATA:product_family}"}
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{WORD:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};user:%{GREEDYDATA:user};src_user_name:%{GREEDYDATA:src_usr};src_machine_name:%{GREEDYDATA:src_machine_name};snid:%{WORD:snid};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};message_info:%{GREEDYDATA:message_info};user:%{GREEDYDATA:user};src_user_name:%{GREEDYDATA:src_usr};snid:%{WORD:snid};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}"}
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};rule:%{WORD:rule1};message_info:%{GREEDYDATA:message_info};dst_machine_name:%{GREEDYDATA:dst_machine_name};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}"}
match => { "msg" => "src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};message_info:%{GREEDYDATA:message_info};src_machine_name:%{GREEDYDATA:src_machine_name};snid:%{WORD:snid};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}"}
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};ICMP Type:%{WORD:icmp_type};ICMP Code:%{WORD:icmp_code};src_machine_name:%{GREEDYDATA:src_machine_name};snid:%{WORD:snid};dst_machine_name:%{GREEDYDATA:dst_machine_name};product:%{GREEDYDATA:product};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};ICMP:%{GREEDYDATA:icmp};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};ICMP Type:%{WORD:icmp_type};ICMP Code:%{WORD:icmp_code};dst_machine_name:%{GREEDYDATA:dst_machine_name};product:%{GREEDYDATA:product};product_family:%{GREEDYDATA:product_family}"}
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};src_machine_name:%{GREEDYDATA:src_machine_name};snid:%{WORD:snid};dst_machine_name:%{GREEDYDATA:dst_machine_name};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};xlatesrc:%{IP:xlatesrc};NAT_rulenum:%{INT:nat_rule_num};NAT_addtnl_rulenum:%{INT:addtnl_rule_num};scheme::%{GREEDYDATA:scheme};methods::%{GREEDYDATA:methods};peer gateway:%{GREEDYDATA:peer_gateway};community:%{GREEDYDATA:community};user:%{GREEDYDATA:user};fw_subproduct:%{GREEDYDATA:subproduct};vpn_feature_name:%{GREEDYDATA:vpn_feature_name};src_user_name%{GREEDYDATA:src_user_name};dst_machine_name:%{GREEDYDATA:dst_machine_name};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};xlatesport:%{WORD:xlatesport:};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};xlatesrc:%{IP:xlatesrc};NAT_rulenum:%{INT:nat_rule_num};NAT_addtnl_rulenum:%{INT:addtnl_rule_num};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};xlatesport:%{WORD:xlatesport};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};xlatesrc:%{IP:xlatesrc};NAT_rulenum:%{INT:nat_rule_num};NAT_addtnl_rulenum:%{INT:addtnl_rule_num};src_machine_name:%{GREEDYDATA:src_machine_name};snid:%{WORD:snid};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};xlatesport:%{WORD:xlatesport};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "contract_name:%{GREEDYDATA:contract_name};subs_exp:%{GREEDYDATA:subs_exp};Severity:%{INT:severity};log_id:%{GREEDYDATA:log_id};subscription_stat:%{GREEDYDATA:subscription_state};subscription_stat_desc:%{GREEDYDATA:subscription_stat_desc};product:%{GREEDYDATA:product};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};service_id:%{GREEDYDATA:service_id};dst:%{IP:dst_ip};proto:%{WORD:protocol};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};appi_name:%{GREEDYDATA:appi_name};app_desc:%{GREEDYDATA:app_desc};app_id:%{GREEDYDATA:app_id};app_category:%{GREEDYDATA:app_category};matched_category:%{GREEDYDATA:matched_category};app_properties:%{GREEDYDATA:app_properties};app_risk:%{WORD:app_risk};app_rule_id:\{%{UUID:app_rule_id}\};app_sig_id:%{GREEDYDATA:app_sig_id};proxy_src_ip:%{IP:proxy_src_ip};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};appi_name:%{GREEDYDATA:appi_name};app_id:%{GREEDYDATA:app_id};matched_category:%{GREEDYDATA:matched_category};app_properties:%{GREEDYDATA:app_properties};app_risk:%{WORD:app_risk};app_rule_id:\{%{UUID:app_rule_id}\};web_client_type:%{GREEDYDATA:web_client_type};web_server_type:%{GREEDYDATA:web_service_type};resource:%{GREEDYDATA:resource};proxy_src_ip:%{IP:proxy_src_ip};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};dst_user_name:%{GREEDYDATA:dst_username};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};xlatesrc:%{IP:xlatesrc};NAT_rulenum:%{INT:nat_rule_num};NAT_addtnl_rulenum:%{INT:addtnl_rule_num};src_machine_name:%{GREEDYDATA:src_machine_name};snid:%{WORD:snid};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};xlatesport:%{WORD:xlatesport};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};dst_machine_name:%{GREEDYDATA:dst_machine_name};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};user:%{GREEDYDATA:user};src_user_name:%{GREEDYDATA:src_usr};src_machine_name:%{GREEDYDATA:src_machine_name};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};dst_machine_name:%{GREEDYDATA:dst_machine_name};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};message_info:%{GREEDYDATA:message_info};user:%{GREEDYDATA:user};src_user_name%{GREEDYDATA:src_usr};src_machine_name:%{GREEDYDATA:src_machine_name};snid:%{WORD:snid};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "%{WORD}%{SPACE}%{TIME}%{SPACE}%{WORD:packetstate}%{SPACE}%{IP:hostip}%{SPACE}TCP packet out of state:%{GREEDYDATA:tcp_packet_out_of_state};tcp_flags:%{GREEDYDATA:tcp_flag};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "TCP packet out of state:%{GREEDYDATA:tcp_packet_out_of_state};tcp_flags:%{GREEDYDATA:tcp_flag};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};product:%{GREEDYDATA:product};service:%{INT:src_port};s_port:%{GREEDYDATA:service};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};rule:%{GREEDYDATA:rule1};message_info:%{GREEDYDATA:message_info};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};user:%{GREEDYDATA:user};src_user_name:%{GREEDYDATA:src_usr};src_machine_name:%{GREEDYDATA:src_machine_name};snid:%{WORD:snid};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};message_info:%{GREEDYDATA:message_info};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{GREEDYDATA:s_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{GREEDYDATA:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};xlatesrc:%{IP:xlatesrc};NAT_rulenum:%{INT:nat_rule_num};NAT_addtnl_rulenum:%{INT:addtnl_rule_num};user:%{GREEDYDATA:user};snid:%{WORD:snid};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};xlatesport:%{WORD:xlatesport:};product_family:%{GREEDYDATA:product_family}" }
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};service_id:%{GREEDYDATA:service_id};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};rule:%{WORD:rule1};message_info:%{GREEDYDATA:message_info};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}"}
match => { "msg" => "Protection Name:%{GREEDYDATA:protection_name};Severity:%{WORD:severity};Confidence Level:%{WORD:confidence_level};protection_id:%{WORD:protection_id};SmartDefense Profile:%{GREEDYDATA:smartdefense_profile};Performance Impact:%{WORD:performance_impact};Protection Type:%{WORD:protection_type};rule:%{WORD:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};Attack Info:%{GREEDYDATA:attack_info};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};src_machine_name:%{GREEDYDATA:src_machine_name};snid:%{WORD:snid};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};FollowUp:%{GREEDYDATA:followedup};product_family:%{GREEDYDATA:product_family}"}
match => { "msg" => "inzone:%{GREEDYDATA:inzone};outzone:%{GREEDYDATA:outzone};rule:%{WORD:rule1};rule_uid:\{%{UUID:rule_uid}\};rule_name:%{GREEDYDATA:rule_name};rpc_prog:%{WORD:rpc_prog};src:%{IP:src_ip};dst:%{IP:dst_ip};proto:%{WORD:protocol};product:%{GREEDYDATA:product};service:%{GREEDYDATA:service};s_port:%{DATA:src_port};product_family:%{GREEDYDATA:product_family}"}
}
}
if [dst_ip] =~ /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/ {
if [src_ip] =~ /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/ {
 if ([src_ip]) {
cidr {
    address => [ "%{dst_ip}" ]
    network => [ "0.0.0.0/32", "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7", "127.0.0.0/8", "::1/128","169.254.0.0/16", "fe80::/10","224.0.0.0/4", "ff00::/8","255.255.255.255/32" ]
    add_field => { "[dst_ip_locality]" => "Private" }
}

cidr {
    address => [ "%{src_ip}" ]
    network => [ "0.0.0.0/32", "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7", "127.0.0.0/8", "::1/128","169.254.0.0/16", "fe80::/10","224.0.0.0/4", "ff00::/8","255.255.255.255/32" ]
    add_field => { "[src_ip_locality]" => "Private" }
}

if [dst_ip_locality] != "Private" {
geoip {
source => "dst_ip"
add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
}
geoip {
add_tag => [ "Whois" ]
database => "/etc/logstash/database/GeoLite2-ASN.mmdb"
source => "dst_ip"
}
translate {
field => "src_ip"
destination => "blacklisted"
dictionary_path => "/opt/cybota/blacklist/blacklist.yaml"
}
}
if [src_ip_locality] != "Private" {
geoip {    
source => "src_ip"
add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
}
geoip {
add_tag => [ "Whois" ]
database => "/etc/logstash/database/GeoLite2-ASN.mmdb"
source => "src_ip"
}
translate {
field => "src_ip"
destination => "blacklisted"
dictionary_path => "/opt/cybota/blacklist/blacklist.yaml"
}
}
mutate {
convert => [ "[geoip][coordinates]", "float"]
}
}
}
}
}
}

filter {
  if "BRO" in [type] {
mutate { 
  update => { "type" => "ids" }
  add_field => { "site" => "xxxxxxx" }
 }
}
}

output {
if [type] in ["ids","firewall"] {
stdout { codec => json }
elasticsearch {
hosts => ["localhost:9200"]
index => "ids-%{+YYYY.MM.dd}"
template => "/etc/logstash/templates/elastic-template.json"
template_name => "elastic-template.json"
template_overwrite => true
      ssl => true
       ssl_certificate_verification => false
truststore => "/etc/elasticsearch/truststore.jks"
truststore_password => "xxxxxxx"
user => xxxxxxx
password => "xxxxxxx"

}
}
}
