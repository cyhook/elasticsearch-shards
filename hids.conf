input {
   beats {
        host => "127.0.0.1"
        port => 2060
        codec => "json_lines"
  }
}
filter {
if [fields][type] == "hids" {
 grok {
    break_on_match => true
    match => { "full_log" => "%{GREEDYDATA}%{SPACE}Client Address:%{SPACE}::ffff:%{IPV4:client_ip}%{SPACE}Client Port:%{SPACE}%{INT:client_port} %{GREEDYDATA}" }
    match => { "full_log" => "%{GREEDYDATA} Source Network Address: %{IPV4:src_ip} Source Port: %{INT:src_port} %{GREEDYDATA}"}  
}

grok {
break_on_match => true
match => { "full_log" => "%{GREEDYDATA} Process Name: %{GREEDYDATA:process_name} %{GREEDYDATA}" }
match => { "full_log" => "%{GREEDYDATA}%{SPACE}Password Last Set:%{SPACE}%{GREEDYDATA:password_last_set}%{SPACE}Account Expires:%{SPACE}%{GREEDYDATA:account_expiry}%{SPACE}Primary Group ID:%{SPACE}%{GREEDYDATA}" }
}
translate {
field => "logon_type"
destination => "logon_type_desc"
dictionary_path => "/opt/cybota/windows/logontype.yaml"
}
mutate {
rename => { "status" => "classification" }
add_field => { "user" => "%{account_name}" }
remove_field => [ "%{status}" ]
}
}
}
output {
if [fields][type] == "hids" {
  stdout { codec => json }
    elasticsearch {
        hosts => ["localhost:9200"]
        index => "hids-%{+YYYY.MM.dd}"
       ssl => true
       ssl_certificate_verification => true
truststore => "/etc/elasticsearch/truststore.jks"
truststore_password => "xxxxxxxxxx"
user => xxxxxxxxxx
password => "xxxxxxxxxx"
}
}
}
