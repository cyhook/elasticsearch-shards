input {
jdbc {
jdbc_driver_library => "/etc/logstash/java/mysql-connector-java-5.1.44-bin.jar"
jdbc_driver_class => "com.mysql.jdbc.Driver"
jdbc_connection_string => "jdbc:mysql://localhost:3306/securityonion_db?useSSL=true"
jdbc_user => "xxxxx"
jdbc_password => "xxxxx"
schedule => "*/10 * * * *"
statement => "select sid, cid, signature, signature_gen, signature_id, timestamp, INET_NTOA(src_ip) AS src_ip, INET_NTOA(dst_ip) AS dst_ip, src_port , dst_port , icmp_type , icmp_code, ip_flags, last_modified, last_uid, abuse_queue, abuse_sent, class, priority from event where cid > :sql_last_value order by cid"
use_column_value => true
tracking_column => cid
type => "idsalerts"
}
}

filter {
if [type] == "idsalerts" {
json {
source => "message"
}

 if ([src_ip]) {
cidr {
    address => [ "%{dst_ip}" ]
    network => [ "0.0.0.0/32", "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7", "127.0.0.0/8", "::1/128","169.254.0.0/16", "fe80::/10","224.0.0.0/4", "ff00::/8","255.255.255.255/32" ]
    add_field => { "[dst_ip_locality]" => "Private" }
}

cidr {
    address => [ "%{src_ip}" ]
    network => [ "0.0.0.0/32", "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7", "127.0.0.0/8", "::1/128","169.254.0.0/16", "fe80::/10","224.0.0.0/4", "ff00::/8","255.255.255.255/32" ]
    add_field => { "[src_ip_locality]" => "Private" }
}

if [dst_ip_locality] != "Private" {
geoip {
source => "dst_ip"
add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
}
geoip {
add_tag => [ "Whois" ]
database => "/etc/logstash/database/GeoLite2-ASN.mmdb"
source => "dst_ip"
}
}
if [src_ip_locality] != "Private" {
geoip {    
source => "src_ip"
add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
}
geoip {
add_tag => [ "Whois" ]
database => "/etc/logstash/database/GeoLite2-ASN.mmdb"
source => "src_ip"
}
}
mutate {
add_field => { "site" => "xxxxx" }
}
mutate {
convert => [ "[geoip][coordinates]", "float"]
}
}
}
}

output {
if [type] in ["idsalerts"] {
stdout { codec => json }
elasticsearch {
hosts => ["localhost:9200"]
index => "idsalerts-%{+YYYY.MM.dd}"
template => "/etc/logstash/templates/elastic-template.json"
template_name => "elastic-template.json"
template_overwrite => true
ssl => true
ssl_certificate_verification => true
truststore => "/etc/elasticsearch/truststore.jks"
truststore_password => "xxxxx"
user => xxxxx
password => "xxxxx"
}
}
}
